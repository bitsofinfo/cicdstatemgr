
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy
spec:
  params:
    - name: cicdContextDataId
      type: string
    - name: targetAppName
      type: string
    - name: targetAppTag
      type: string
    - name: originalRequestBody
      type: string
    - name: gitCloneUrl
      type: string

    # for security checks
    - name: cicdContextName
      type: string
    - name: invokerUid
      type: string
    - name: relatedCicdContextDataId
      type: string
    - name: relatedPipelineRunUid
      type: string
    - name: relatedPipelineName
      type: string
    - name: triggeredBySystem
      type: string
    - name: triggeredByDescription
      type: string

  workspaces:
    - name: cicdstatemgr-secrets
      description: cicdstatemgr secrets workspace
    - name: cicdstatemgr-configs
      description: cicdstatemgr configs workspace
    - name: scratch
      description: git clone scratch

  tasks:


      #---------------------
      # git clone app
      #---------------------
    - name: git-clone-app-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: scratch
      params:
        - name: url
          value: $(params.gitCloneUrl)
        - name: revision
          value: $(params.targetAppTag)

      #---------------------
      # init
      #---------------------
    - name: init
      runAfter:
        - git-clone-app-source
      taskRef:
        name: init

      workspaces:
        - name: cicdstatemgr-configs
          workspace: cicdstatemgr-configs
        - name: cicdstatemgr-secrets
          workspace: cicdstatemgr-secrets

      params:
        - name: pipelineRunUid
          value: $(context.pipelineRun.name)
        - name: cicdContextDataId
          value: $(params.cicdContextDataId)
        - name: pipelineName
          value: deploy
        - name: originalRequestBody
          value: $(params.originalRequestBody)

        # for security checks
        - name: cicdContextName
          value: $(params.cicdContextName)
        - name: invokerUid
          value: $(params.invokerUid)
        - name: relatedCicdContextDataId
          value: $(params.relatedCicdContextDataId)
        - name: relatedPipelineRunUid
          value: $(params.relatedPipelineRunUid)
        - name: relatedPipelineName
          value: $(params.relatedPipelineName)
        - name: triggeredBySystem
          value: $(params.triggeredBySystem)
        - name: triggeredByDescription
          value: $(params.triggeredByDescription)

        - name: setContextDataValues
          value: >-
            state.deploy.$(context.pipelineRun.name).params.targetAppName=$(params.targetAppName)|
            state.deploy.$(context.pipelineRun.name).params.cicdContextDataId=$(params.cicdContextDataId)|
            state.deploy.$(context.pipelineRun.name).params.targetAppTag=$(params.targetAppTag)


      #---------------------
      # Deploy
      #---------------------
    - name: deploy
      taskRef:
        name: deploy

      runAfter:
        - init

      workspaces:
        - name: cicdstatemgr-configs
          workspace: cicdstatemgr-configs
        - name: cicdstatemgr-secrets
          workspace: cicdstatemgr-secrets
        - name: git-source
          workspace: scratch

      params:
        - name: pipelineRunUid
          value: $(context.pipelineRun.name)
        - name: cicdContextDataId
          value: $(params.cicdContextDataId)
        - name: targetAppTag
          value: $(params.targetAppTag)

      #---------------------------
      # Deploy finish success
      #---------------------------
    - name:  deploy-finish-success
      taskRef:
        name: handle-event

      runAfter:
        - deploy

      workspaces:
        - name: cicdstatemgr-configs
          workspace: cicdstatemgr-configs
        - name: cicdstatemgr-secrets
          workspace: cicdstatemgr-secrets


      when:
        - input: "$(tasks.deploy.results.last-exit-code)"
          operator: in
          values: ["0"]

      #conditions:
      #  - conditionRef: exit-code-is-success
      #    params:
      #      - name: exit-code
      #        value: $(tasks.deploy.results.last-exit-code)

      params:
        - name: pipelineRunUid
          value: $(context.pipelineRun.name)
        - name: cicdContextDataId
          value: $(params.cicdContextDataId)
        - name: pipelineName
          value: deploy
        - name: eventName
          value: success
        - name: exitWithExitCode
          value: "0"

      #---------------------------
      # Deploy finish failure
      #---------------------------
    - name:  deploy-finish-failure
      taskRef:
        name: handle-event

      runAfter:
        - deploy

      workspaces:
        - name: cicdstatemgr-configs
          workspace: cicdstatemgr-configs
        - name: cicdstatemgr-secrets
          workspace: cicdstatemgr-secrets

      when:
        - input: "$(tasks.deploy.results.last-exit-code)"
          operator: notin
          values: ["0"]

      #conditions:
      #  - conditionRef: exit-code-is-failure
      #    params:
      #      - name: exit-code
      #        value: $(tasks.deploy.results.last-exit-code)

      params:
        - name: pipelineRunUid
          value: $(context.pipelineRun.name)
        - name: cicdContextDataId
          value: $(params.cicdContextDataId)
        - name: pipelineName
          value: deploy
        - name: eventName
          value: failure
        - name: exitWithExitCode
          value: "1"
