
---

apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: test
  annotations:
    # https://tektoncd.slack.com/archives/CKUSJ2A5D/p1606222895139800
    # https://github.com/tektoncd/triggers/pull/842
    triggers.tekton.dev/old-escape-quotes: "true"
spec:
  params:
    - name: cicdContextName
    - name: appName
    - name: cicdContextDataId
    - name: originalRequestBody

    # for security checks
    - name: cicdContextName
    - name: invokerUid
    - name: relatedCicdContextDataId
    - name: relatedPipelineRunUid
    - name: relatedPipelineName
    - name: triggeredBySystem
    - name: triggeredByDescription

  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: test-$(tt.params.cicdContextName)-$(tt.params.appName)-
      spec:
        serviceAccountName: cicd-tekton

        pipelineRef:
          name: test

        params:
          - name: cicdContextDataId
            value: $(tt.params.cicdContextDataId)

          - name: originalRequestBody
            value: $(tt.params.originalRequestBody)

          # for security checks
          - name: cicdContextName
            value: $(tt.params.cicdContextName)
          - name: invokerUid
            value: $(tt.params.invokerUid)
          - name: relatedCicdContextDataId
            value: $(tt.params.relatedCicdContextDataId)
          - name: relatedPipelineRunUid
            value: $(tt.params.relatedPipelineRunUid)
          - name: relatedPipelineName
            value: $(tt.params.relatedPipelineName)
          - name: triggeredBySystem
            value: $(tt.params.triggeredBySystem)
          - name: triggeredByDescription
            value: $(tt.params.triggeredByDescription)

        workspaces:

          - name: cicdstatemgr-secrets
            secret:
              secretName: cicdstatemgr-secrets
              items:
                - key: cicdstatemgr-secrets.yaml
                  path: cicdstatemgr-secrets.yaml

          - name: cicdstatemgr-configs
            configmap:
              name: cicdstatemgr-configs

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: test
spec:
  params:
    - name: cicdContextName
      value: $(extensions.cicdContextName)

    - name: appName
      value: $(extensions.appName)

    - name: cicdContextDataId
      value: $(extensions.cicdContextDataId)

    - name: originalRequestBody
      value: $(body)

    # for security checks
    - name: invokerUid
      value: $(extensions.invokerUid)
    - name: relatedCicdContextDataId
      value: $(extensions.relatedCicdContextDataId)
    - name: relatedPipelineRunUid
      value: $(extensions.relatedPipelineRunUid)
    - name: relatedPipelineName
      value: $(extensions.relatedPipelineName)
    - name: triggeredBySystem
      value: $(extensions.triggeredBySystem)
    - name: triggeredByDescription
      value: $(extensions.triggeredByDescription)


---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: test-via-slack
spec:
  params:

    - name: cicdContextName
      value: $(extensions.cicdContextName)

    - name: cicdContextDataId
      value: $(extensions.cicdContextDataId)

    - name: appName
      value: $(extensions.targetAppName)

    - name: originalRequestBody
      value: $(body)

    - name: gitCloneUrl
      value: $(extensions.gitCloneUrl)

    # for security checks
    - name: invokerUid
      value: $(extensions.slackUsername)
    - name: relatedCicdContextDataId
      value: $(extensions.relatedCicdContextDataId)
    - name: relatedPipelineRunUid
      value: $(extensions.relatedPipelineRunUid)
    - name: relatedPipelineName
      value: $(extensions.relatedPipelineName)
    - name: triggeredBySystem
      value: 'slack'
    - name: triggeredByDescription
      value: 'slack button press by <@$(extensions.slackUserId)>'

---
